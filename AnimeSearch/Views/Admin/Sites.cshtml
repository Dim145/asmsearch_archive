@{
    ViewData["Title"] = "Sites";
}
@using AnimeSearch.Database

<link rel="stylesheet" href="~/css/Admin/Sites.min.css" />
<script type="text/javascript" src="~/js/Admin/Sites.min.js"></script>

<div class="border rounded max-height">
    @if (ViewData["sites"] is not null and Sites[] sites && sites.Length > 0)
    {
        @Utilities.ReactComponent(Html, "~/js/react/Table.jsx", new { cols = Tab( "Title", "URL", "Icon", "Type du site", "Internationnal" ),
            rows = sites.Select(s => new { datas = Tab( s.Title, s.Url, s.UrlIcon, s.TypeSite, s.Is_inter ? "oui" : "non" ), key = s.Url, className = "site " + (s.Etat == EtatSite.VALIDER ? "" : s.Etat == EtatSite.NON_VALIDER ? "bg-warning" : "bg-danger") }),});
    }

    <div id="rmenu" style="display: none;" class="bg-dark border border-white rounded text-white">
        <form asp-controller="admin" asp-action="CSVS" method="post">
            <input type="hidden" class="d-none" style="display: none;" id="formid" name="url" />
            <input type="hidden" class="d-none" style="display: none;" id="valstate" name="etat" />
            <button class="btn btn-dark w-100" id="cval">Supprimer</button>
        </form>
        <form asp-controller="admin" asp-action="EditerSite" method="post">
            <input type="hidden" class="d-none" style="display: none;" id="modifid" name="Url" />
            <button class="btn btn-dark w-100" id="modif">Modifier</button>
        </form>
    </div>

    <div class="dcm" style="display: none;"></div>
</div>

<div class="row mt-2">
    @if (ViewData["time_before_cs_service"] is not null and TimeSpan time)
    {
        <div class="col-auto text-left">
            <a class="text-white">Temps avant prochaine vérification auto: @time.ToString(@"hh' h 'mm")</a>
        </div>
    }
    <div class="col text-right">
        <a class="btn btn-dark border-white" asp-controller="admin" asp-action="index">Retour</a>
</div>
</div>